"use strict";(self.webpackChunkclickhouse_sink_connector=self.webpackChunkclickhouse_sink_connector||[]).push([[4452],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},l=void 0,i={unversionedId:"sink-connector-lightweight/README",id:"sink-connector-lightweight/README",title:"README",description:"Docker compose",source:"@site/docs/sink-connector-lightweight/README.md",sourceDirName:"sink-connector-lightweight",slug:"/sink-connector-lightweight/",permalink:"/docs/sink-connector-lightweight/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sink-connector-lightweight/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"transactions",permalink:"/docs/doc/transactions"}},s={},c=[{value:"Docker compose",id:"docker-compose",level:3},{value:"Getting started",id:"getting-started",level:3},{value:"Getting Started (PostgreSQL)",id:"getting-started-postgresql",level:3},{value:"Getting Started (MongoDB)",id:"getting-started-mongodb",level:3},{value:"Getting Started (Helm Charts)",id:"getting-started-helm-charts",level:3},{value:"Helm Charts",id:"helm-charts",level:4},{value:"Building from sources",id:"building-from-sources",level:3},{value:"DDL Support:",id:"ddl-support",level:4},{value:"TABLE operations",id:"table-operations",level:2},{value:"DATABASE operations",id:"database-operations",level:2},{value:"Not supported:",id:"not-supported",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"docker-compose"},"Docker compose"),(0,r.kt)("h3",{id:"getting-started"},"Getting started"),(0,r.kt)("p",null,"Configuration(yaml) file mounted as volume"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      - ./config.yml:/config.yml\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Configuration(MySQL)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'database.hostname: "mysql-master"\ndatabase.port: "3306"\ndatabase.user: "root"\ndatabase.password: "root"\ndatabase.server.name: "ER54"\ndatabase.include.list: sbtest\n#table.include.list=sbtest1\nclickhouse.server.url: "clickhouse"\nclickhouse.server.user: "root"\nclickhouse.server.password: "root"\nclickhouse.server.port: "8123"\nclickhouse.server.database: "test"\ndatabase.allowPublicKeyRetrieval: "true"\nsnapshot.mode: "schema_only"\noffset.flush.interval.ms: 5000\nconnector.class: "io.debezium.connector.mysql.MySqlConnector"\noffset.storage: "io.debezium.storage.jdbc.offset.JdbcOffsetBackingStore"\noffset.storage.offset.storage.jdbc.offset.table.name: "altinity_sink_connector.replica_source_info"\noffset.storage.jdbc.url: "jdbc:clickhouse://clickhouse:8123"\noffset.storage.jdbc.user: "root"\noffset.storage.jdbc.password: "root"\noffset.storage.offset.storage.jdbc.offset.table.ddl: "CREATE TABLE if not exists %s\n(\n    `id` String,\n    `offset_key` String,\n    `offset_val` String,\n    `record_insert_ts` DateTime,\n    `record_insert_seq` UInt64,\n    `_version` UInt64 MATERIALIZED toUnixTimestamp64Nano(now64(9))\n)\nENGINE = ReplacingMergeTree(_version)\nORDER BY id\nSETTINGS index_granularity = 8198"\noffset.storage.offset.storage.jdbc.offset.table.delete: "delete from %s where 1=1"\nschema.history.internal: "io.debezium.storage.jdbc.history.JdbcSchemaHistory"\nschema.history.internal.jdbc.url: "jdbc:clickhouse://clickhouse:8123"\nschema.history.internal.jdbc.user: "root"\nschema.history.internal.jdbc.password: "root"\nschema.history.internal.jdbc.schema.history.table.ddl: "CREATE TABLE if not exists %s\n(`id` VARCHAR(36) NOT NULL, `history_data` VARCHAR(65000), `history_data_seq` INTEGER, `record_insert_ts` TIMESTAMP NOT NULL, `record_insert_seq` INTEGER NOT NULL) ENGINE=ReplacingMergeTree(record_insert_seq) order by id"\n\nschema.history.internal.jdbc.schema.history.table.name: "altinity_sink_connector.replicate_schema_history"\nenable.snapshot.ddl: "false"\n\n')),(0,r.kt)("p",null,"Start the docker container\nA Sample docker-compose is provided , it starts the docker container \\\n",(0,r.kt)("inlineCode",{parentName:"p"},"registry.gitlab.com/altinity-public/container-images/clickhouse_debezium_embedded:latest")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd sink-connector-lightweight\ncd docker\n./start-docker-compose.sh\n")),(0,r.kt)("h3",{id:"getting-started-postgresql"},"Getting Started (PostgreSQL)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"(sink-connector-lightweight/docker/docker_postgres.env)")," "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Configuration")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'export database.hostname="postgres"\nexport database.port="5432"\nexport database.user="root"\nexport database.password="root"\nexport snapshot.mode="schema_only"\nexport clickhouse.server.url="clickhouse"\nexport clickhouse.server.user="root"\nexport clickhouse.server.password="root"\nexport clickhouse.server.port="8123"\nexport connector.class="io.debezium.connector.postgresql.PostgresConnector"\nexport plugin.name="pgoutput"\nexport table.include.list="public.tm"\nexport clickhouse.server.database="test"\nexport auto.create.tables=true\nexport replacingmergetree.delete.column="_sign"\nexport metrics.port=8083\n\n')),(0,r.kt)("p",null,"After the environment variables are set, start the docker container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd sink-connector-lightweight\ncd docker\ndocker-compose up -f docker-compose-postgres.yml\n")),(0,r.kt)("h3",{id:"getting-started-mongodb"},"Getting Started (MongoDB)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"(sink-connector-lightweight/docker/docker_mongo.env)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Configuration")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'export mongodb.connection.string="mongodb://localhost:49252"\nexport mongodb.members.auto.discover="true"\nexport topic.prefix="mongo-ch"\nexport collection.include.list="project.items"\nexport snapshot.include.collection.list="project.items"\nexport database.include.list="project"\nexport database.dbname="project"\nexport database.user="project"\nexport database.password="project"\nexport snapshot.mode="initial"\nexport connector.class="io.debezium.connector.mongodb.MongoDbConnector"\nexport offset.storage="org.apache.kafka.connect.storage.FileOffsetBackingStore"\nexport offset.flush.interval.ms="60000"\nexport auto.create.tables="true"\nexport clickhouse.server.url="clickhouse"\nexport clickhouse.server.port="8123"\nexport clickhouse.server.user="root"\nexport clickhouse.server.password="root"\nexport clickhouse.server.database="project"\nexport replacingmergetree.delete.column="_sign"\nexport metrics.port="8087"\nexport database.allowPublicKeyRetrieval="true"\n')),(0,r.kt)("p",null,"After the environment variables are set, start the docker container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd sink-connector-lightweight\ncd docker\ndocker-compose up -f docker-compose-mongo.yml\n")),(0,r.kt)("h3",{id:"getting-started-helm-charts"},"Getting Started (Helm Charts)"),(0,r.kt)("h4",{id:"helm-charts"},"Helm Charts"),(0,r.kt)("p",null,"Update the MySQL/PostgreSQL and ClickHouse configuration values\n`"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  - name: database.hostname\n    value: "127.0.0.1"\n  - name: database.port\n    value: "3306"\n  - name: database.dbname\n    value: "public"\n  - name: database.user\n    value: "root"\n  - name: database.password\n    value: "adminpass"\n  - name: snapshot.mode\n    value: "initial"\n  - name: connector.class\n    value: "io.debezium.connector.postgresql.PostgresConnector"\n  - name: plugin.name\n    value: "pgoutput"\n  - name: table.include.list\n    value: "public.tm"\n  - name: offset.storage\n    value: "org.apache.kafka.connect.storage.FileOffsetBackingStore"\n  - name: offset.storage.file.filename\n    value: "filename"\n  - name: offset.flush.interval.ms\n    value: "60000"\n  - name: auto.create.tables\n    value: "true"\n  - name: clickhouse.server.url\n    value: "localhost"\n  - name: clickhouse.server.port\n    value: "8123"\n  - name: clickhouse.server.user\n    value: "default"\n  - name: clickhouse.server.password\n    value: "2"\n  - name: clickhouse.server.database\n    value: "public"\n  - name: replacingmergetree.delete.column\n    value: "_sign"\n  - name: database.allowPublicKeyRetrieval\n    value: "true"\n  - name: metrics.enable\n    value: "true"\n  - name: metrics.port\n    value: "8083"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd helm\nhelm install clickhouse-debezium-embedded .\n\n")),(0,r.kt)("h3",{id:"building-from-sources"},"Building from sources"),(0,r.kt)("p",null,"Build the JAR file\n",(0,r.kt)("inlineCode",{parentName:"p"},"mvn clean install")),(0,r.kt)("h4",{id:"ddl-support"},"DDL Support:"),(0,r.kt)("p",null,"With Datatype conversion(From MySQL to ClickHouse)"),(0,r.kt)("p",null,"ALTER TABLE"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MySQL"),(0,r.kt)("th",{parentName:"tr",align:null},"ClickHouse"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD COLUMN"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD COLUMN NULL/NOT NULL"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD COLUMN DEFAULT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD COLUMN FIRST, AFTER"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DROP COLUMN"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MODIFY COLUMN data_type"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MODIFY COLUMN data_type NULL/NOT NULL"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MODIFY COLUMN data_type DEFAULT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MODIFY COLUMN FIRST, AFTER"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MODIFY COLUMN old_name new_name datatype NULL/NOT NULL"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RENAME COLUMN col1 to col2"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CHANGE COLUMN FIRST, AFTER"),(0,r.kt)("td",{parentName:"tr",align:null},"MODIFY COLUMN")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ALTER COLUMN col_name ADD DEFAULT"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported by grammar")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ALTER COLUMN col_name ADD DROP DEFAULT"),(0,r.kt)("td",{parentName:"tr",align:null},"Not supported by grammar")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD PRIMARY KEY"),(0,r.kt)("td",{parentName:"tr",align:null},"Cannot modify primary key in CH")))),(0,r.kt)("h2",{id:"table-operations"},"TABLE operations"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MySQL"),(0,r.kt)("th",{parentName:"tr",align:null},"ClickHouse"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RENAME TABLE name_1 to name_2"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TRUNCATE TABLE"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DROP TABLE name_1"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DROP TABLE name_1, name_2"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ALTER TABLE table_name to new_table_name"),(0,r.kt)("td",{parentName:"tr",align:null},"RENAME table_name to new_table_name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CREATE TABLE PARTITION BY KEY(col1)"),(0,r.kt)("td",{parentName:"tr",align:null},"PARTITION BY col1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CREATE TABLE PARTITION BY RANGE(col1,col2, col3)"),(0,r.kt)("td",{parentName:"tr",align:null},"PARTITION BY col1, col2, col3")))),(0,r.kt)("h2",{id:"database-operations"},"DATABASE operations"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MySQL"),(0,r.kt)("th",{parentName:"tr",align:null},"ClickHouse"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CREATE DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"USE DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"not-supported"},"Not supported:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MySQL"),(0,r.kt)("th",{parentName:"tr",align:null},"ClickHouse"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD INDEX"),(0,r.kt)("td",{parentName:"tr",align:null},"Secondary indexes in CH, what about type and index granularity?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD CONSTRAINT  (CHECK)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ADD CONSTRAINT"),(0,r.kt)("td",{parentName:"tr",align:null},"Add constraint with Primary key(Not supported)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DROP CONSTRAINT"),(0,r.kt)("td",{parentName:"tr",align:null},"Add constraint with Primary key(Not supported)")))))}u.isMDXComponent=!0}}]);